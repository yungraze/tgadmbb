import telebot
import time
from telebot import types


bot = telebot.TeleBot('6748343854:AAG0G4lj8aNIwvk66A9YR-f1F6x_0pxwtcY')



@bot.message_handler(commands=['start'])
def startBot(message):
    first_mess = f"<b>{message.from_user.first_name} </b>, –ø—Ä–∏–≤–µ—Ç!\n–•–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞?"
    markup = types.InlineKeyboardMarkup()
    button_yes = types.InlineKeyboardButton(text = '–î–∞', callback_data='yes')
    markup.add(button_yes)
    bot.send_message(message.chat.id, first_mess, parse_mode='html', reply_markup=markup)

@bot.callback_query_handler(func=lambda call:True)
def response(function_call):
  if function_call.message:
     if function_call.data == "yes":
        second_mess = "–ó–∞–π–¥–∏ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä @BotFather –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π —Ç–∞–º –∏–º—è —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞, –ø–æ—Å–ª–µ —Ç–µ–±–µ —Ç–∞–º –∂–µ —Å–∫–∏–Ω—É—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω, –ø—Ä–∏—Å—ã–ª–∞–π –µ–≥–æ —Å—é–¥–∞!"
        sent = bot.send_message(function_call.message.chat.id, second_mess)
        bot.register_next_step_handler(sent, save_token)
        bot.answer_callback_query(function_call.id)
  bot.answer_callback_query(function_call.id)


def save_token(message):
    user_token = message.text
    bot.send_message(message.chat.id, f'–í–∞—à —Ç–æ–∫–µ–Ω: {user_token}')
    bot.send_message(message.chat.id,text="–•–æ—Ä–æ—à–æ, {0.first_name}! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞!".format(message.from_user))
    vibor(message)

def vibor(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞")
    btn2 = types.KeyboardButton("üîá –ó–∞–≥–ª—É—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è")
    btn3 = types.KeyboardButton("ü§¨ –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ –∏ —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—è")
    btn4 = types.KeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞")
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.chat.id, "–§—É–Ω–∫—Ü–∏–∏:", reply_markup=markup)




@bot.message_handler(content_types=['text'])
def act_li(message):
    if message.text == "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞")
        btn2 = types.KeyboardButton("–ù–µ—Ç")
        markup.add(btn1, btn2)
        msg = bot.send_message(message.chat.id, "–í—ã —Ö–æ—Ç–∏—Ç–µ –∏–º–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞?",reply_markup=markup)
        bot.register_next_step_handler(msg, process_delete_user_step)

    elif message.text == "üîá –ó–∞–≥–ª—É—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞")
        btn2 = types.KeyboardButton("–ù–µ—Ç")
        markup.add(btn1, btn2)
        msg = bot.send_message(message.chat.id, "–í—ã —Ö–æ—Ç–∏—Ç–µ –∏–º–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥–ª—É—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è?",reply_markup=markup)
        bot.register_next_step_handler(msg, process_mute_user_step)

    elif message.text == "ü§¨ –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ –∏ —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞")
        btn2 = types.KeyboardButton("–ù–µ—Ç")
        markup.add(btn1, btn2)
        msg = bot.send_message(message.chat.id, "–í—ã —Ö–æ—Ç–∏—Ç–µ –∏–º–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–ª–æ–≤?",reply_markup=markup)
        bot.register_next_step_handler(msg, process_def_user_step)

    elif message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞":
        bot.send_message(message.chat.id, text="–í–∞—à –±–æ—Ç —Å–æ–∑–¥–∞–Ω")

    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω..")




def process_delete_user_step(message):
    if (message.text == "–î–∞"):
        msg = bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –∫–æ–º–∞–Ω–¥–æ–π –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'kick')")
        bot.register_next_step_handler(msg, save_delete_user_command)
    else:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
        vibor(message)

def save_delete_user_command(message):
    delete_user_command = message.text
    bot.send_message(message.chat.id, f'–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {delete_user_command}. –£—á—Ç–∏—Ç–µ, —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–µ–ª—å–∑—è –≤—ã–≥–æ–Ω—è—Ç—å!')
    vibor(message)





def process_mute_user_step(message):
    if (message.text == "–î–∞"):
        msg = bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –∫–æ–º–∞–Ω–¥–æ–π –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –∑–∞–≥–ª—É—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? –£—á—Ç–∏—Ç–µ, —á—Ç–æ –æ—Ç–º–µ–Ω–∞ –∑–∞–≥–ª—É—à–µ–Ω–∏—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º un (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'mute' –∏ 'unmute')")
        bot.register_next_step_handler(msg, save_mute_user_command)
    else:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
        vibor(message)

def process2_time(message):
    mute_time = message.text
    bot.send_message(message.chat.id, f'–í—Ä–µ–º—è: {mute_time}')
    vibor(message)

def save_mute_user_command(message):
    mute_user_command = message.text
    bot.send_message(message.chat.id, f'–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {mute_user_command}')
    msg = bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è –∑–∞–≥–ª—É—à–µ–Ω–∏–µ?")
    bot.register_next_step_handler(msg, process2_time)






def process_def_user_step(message):
    if (message.text == "–î–∞"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton("–•–≤–∞—Ç–∏—Ç")
        markup.add(btn1)
        msg = bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ, –∑–∞ –∫–∞–∫–∏–µ —Å–ª–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å—Å—è. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–•–≤–∞—Ç–∏—Ç'",reply_markup=markup)
        bot.register_next_step_handler(msg, spisok_slov)
    else:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
        vibor(message)

spisok = list()

def spisok_slov(message):
    if (message.text == "–•–≤–∞—Ç–∏—Ç"):
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
        vibor(message)
    else:
        msg = message.text
        spisok.append(msg)
        msg1 = bot.send_message(message.chat.id, "–°–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ, –¥–∞–ª–µ–µ.")
        bot.register_next_step_handler(msg1, spisok_slov)








bot.infinity_polling(none_stop=True)