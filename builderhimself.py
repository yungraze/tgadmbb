import telebot
import time
from telebot import types
import os


bot = telebot.TeleBot('6748343854:AAG0G4lj8aNIwvk66A9YR-f1F6x_0pxwtcY')

kick_tf = False
mute_tf = False
spam_tf = False
delete_user_command = ""
mute_user_command = ""
mute_time = 0
user_token = ""
fuser_token = ""
chat_id = ''


@bot.message_handler(commands=['start'])
def startBot(message):
    first_mess = f"<b>{message.from_user.first_name} </b>, –ø—Ä–∏–≤–µ—Ç!\n–•–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞?"
    markup = types.InlineKeyboardMarkup()
    button_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes')
    markup.add(button_yes)
    bot.send_message(message.chat.id, first_mess, parse_mode='html',
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def response(function_call):
    if function_call.message:
        if function_call.data == "yes":
            second_mess = "–ó–∞–π–¥–∏ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä @BotFather –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π —Ç–∞–º –∏–º—è —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞, –ø–æ—Å–ª–µ —Ç–µ–±–µ —Ç–∞–º –∂–µ —Å–∫–∏–Ω—É—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω, –ø—Ä–∏—Å—ã–ª–∞–π –µ–≥–æ —Å—é–¥–∞!"
            sent = bot.send_message(function_call.message.chat.id, second_mess)
            bot.register_next_step_handler(sent, save_token)
            bot.answer_callback_query(function_call.id)
    bot.answer_callback_query(function_call.id)


def save_token(message):
    global user_token, fuser_token
    user_token = message.text
    fuser_token = user_token.replace(":", "_")
    bot.send_message(message.chat.id, f'–í–∞—à —Ç–æ–∫–µ–Ω: {user_token}')
    bot.send_message(message.chat.id,
                     text="–•–æ—Ä–æ—à–æ, {0.first_name}! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞!".format(
                         message.from_user))
    vibor(message)


def vibor(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                       one_time_keyboard=True)
    btn1 = types.KeyboardButton("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞")
    btn2 = types.KeyboardButton("üîá –ó–∞–≥–ª—É—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è")
    btn3 = types.KeyboardButton("ü§¨ –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ –∏ —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—è")
    btn4 = types.KeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞")
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.chat.id, "–§—É–Ω–∫—Ü–∏–∏:", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def act_li(message):
    if message.text == "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                           one_time_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞")
        btn2 = types.KeyboardButton("–ù–µ—Ç")
        markup.add(btn1, btn2)
        msg = bot.send_message(message.chat.id,
                               "–í—ã —Ö–æ—Ç–∏—Ç–µ –∏–º–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞?",
                               reply_markup=markup)
        bot.register_next_step_handler(msg, process_delete_user_step)

    elif message.text == "üîá –ó–∞–≥–ª—É—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                           one_time_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞")
        btn2 = types.KeyboardButton("–ù–µ—Ç")
        markup.add(btn1, btn2)
        msg = bot.send_message(message.chat.id,
                               "–í—ã —Ö–æ—Ç–∏—Ç–µ –∏–º–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥–ª—É—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è?",
                               reply_markup=markup)
        bot.register_next_step_handler(msg, process_mute_user_step)

    elif message.text == "ü§¨ –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ –∏ —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                           one_time_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞")
        btn2 = types.KeyboardButton("–ù–µ—Ç")
        markup.add(btn1, btn2)
        msg = bot.send_message(message.chat.id,
                               "–í—ã —Ö–æ—Ç–∏—Ç–µ –∏–º–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–ª–æ–≤?",
                               reply_markup=markup)
        bot.register_next_step_handler(msg, process_def_user_step)

    elif message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞":
        bot.send_message(message.chat.id, text="–í–∞—à –±–æ—Ç —Å–æ–∑–¥–∞–Ω")
        global chat_id
        chat_id = message.chat.id
        return proga(kick_tf, mute_tf, spam_tf, spisok, delete_user_command, mute_user_command, mute_time, user_token, chat_id)

    else:
        bot.send_message(message.chat.id,
                         text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω..")


def process_delete_user_step(message):
    global kick_tf
    if (message.text == "–î–∞"):
        kick_tf = True
        msg = bot.send_message(message.chat.id,
                               "–ö–∞–∫–æ–π –∫–æ–º–∞–Ω–¥–æ–π –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ)? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'kick')")
        bot.register_next_step_handler(msg, save_delete_user_command)
    else:
        kick_tf = False
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
        vibor(message)


def save_delete_user_command(message):
    global delete_user_command
    delete_user_command = message.text
    bot.send_message(message.chat.id,
                     f'–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {delete_user_command}. –£—á—Ç–∏—Ç–µ, —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–µ–ª—å–∑—è –≤—ã–≥–æ–Ω—è—Ç—å!')
    vibor(message)


def process_mute_user_step(message):
    global mute_tf
    if (message.text == "–î–∞"):
        mute_tf = True
        msg = bot.send_message(message.chat.id,
                               "–ö–∞–∫–æ–π –∫–æ–º–∞–Ω–¥–æ–π –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –∑–∞–≥–ª—É—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ)? –£—á—Ç–∏—Ç–µ, —á—Ç–æ –æ—Ç–º–µ–Ω–∞ –∑–∞–≥–ª—É—à–µ–Ω–∏—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º un (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'mute' –∏ 'unmute')")
        bot.register_next_step_handler(msg, save_mute_user_command)
    else:
        mute_tf = False
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
        vibor(message)


def process2_time(message):
    global mute_time
    mute_time = int(message.text)
    bot.send_message(message.chat.id, f'–í—Ä–µ–º—è: {mute_time} –º–∏–Ω—É—Ç')
    vibor(message)


def save_mute_user_command(message):
    global mute_user_command
    mute_user_command = message.text
    bot.send_message(message.chat.id,
                     f'–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {mute_user_command}')
    msg = bot.send_message(message.chat.id,
                           "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è –∑–∞–≥–ª—É—à–µ–Ω–∏–µ?")
    bot.register_next_step_handler(msg, process2_time)


def process_def_user_step(message):
    global spam_tf
    if (message.text == "–î–∞"):
        spam_tf = True
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                           one_time_keyboard=True)
        btn1 = types.KeyboardButton("–•–≤–∞—Ç–∏—Ç")
        markup.add(btn1)
        msg = bot.send_message(message.chat.id,
                               "–ù–∞–ø–∏—à–∏—Ç–µ, –∑–∞ –∫–∞–∫–∏–µ —Å–ª–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å—Å—è. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–•–≤–∞—Ç–∏—Ç'",
                               reply_markup=markup)
        bot.register_next_step_handler(msg, spisok_slov)
    else:
        spam_tf = False
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
        vibor(message)


spisok = list()


def spisok_slov(message):
    if (message.text == "–•–≤–∞—Ç–∏—Ç"):
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
        vibor(message)
    else:
        msg = message.text
        spisok.append(msg)
        msg1 = bot.send_message(message.chat.id, "–°–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ, –¥–∞–ª–µ–µ.")
        bot.register_next_step_handler(msg1, spisok_slov)

def proga(*args):
    global kick_tf, mute_tf, spam_tf, chat_id
    with open(f'{fuser_token}.py', 'w+', encoding='utf-8') as file:
        file.write(f"import telebot\nimport time\nbot ="
                   f" telebot.TeleBot('{user_token}')\n\n@bot.message_handler"
                   f"(commands=['start'])\ndef start(message):\n  bot.reply_to"
                   f"(message, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º. –ù–∞–ø–∏—à–∏ "
                   f"/help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.')\n\n")
        if kick_tf or mute_tf:
            file.write(f"@bot.message_handler(commands=['help'])\n"
                       f"def help(message):\n    bot.reply_to(message,' ")
            if kick_tf:
                file.write(f"/{delete_user_command} - –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\\n")
            if mute_tf:
                file.write(
                    f"/{mute_user_command} - –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ {mute_time} –º–∏–Ω—É—Ç\\n/un{mute_user_command} - —Ä–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            file.write("')\n")
        if kick_tf:
            file.write(f"@bot.message_handler(commands=['{delete_user_command}'])\n"
                       f"def kick_user(message):\n    if message.reply_to_message:\n"
                       f"        user_id = message.reply_to_message.from_user.id\n        chat_id = message.chat.id\n" 
                       f"        user_status = bot.get_chat_member(chat_id, user_id).status\n"
                       f"        if (user_status"
                       f" == 'administrator') or (user_status == 'creator'):\n"
                       f"            bot.reply_to(message, '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.')\n"
                       f"        else:\n            bot.kick_chat_member(chat_id, user_id)\n"
                       f"            bot.reply_to(message, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {{message.reply_to_message.from_user.username}} –±—ã–ª —É–¥–∞–ª–µ–Ω.')\n"
                       f"    else:\n"
                       f"        bot.reply_to(message, '–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å.')\n")
        if mute_tf == True:
            file.write(f"@bot.message_handler(commands=['{mute_user_command}'])\ndef mute_user(message):\n    if message.reply_to_message:\n"
                       f"        chat_id = message.chat.id\n        user_id = message.reply_to_message.from_user.id\n"
                       f"        user_status = bot.get_chat_member(chat_id, user_id).status\n        if (user_status == 'administrator') or (user_status == 'creator'):\n"
                       f"            bot.reply_to(message, '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.')\n        else:\n"
                       f"            duration = {mute_time}\n            bot.restrict_chat_member(chat_id, user_id, until_date=time.time()+duration*60)\n"
                       f"            bot.reply_to(message, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {{message.reply_to_message.from_user.username}} –∑–∞–º—É—á–µ–Ω –Ω–∞ {{duration}} –º–∏–Ω—É—Ç.')\n    else:\n"
                       f"        bot.reply_to(message, '–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å.')"
                       f"@bot.message_handler(commands=['un{mute_user_command}'])\ndef unmute_user(message):\n    if message.reply_to_message:\n"
                       f"        chat_id = message.chat.id\n        user_id = message.reply_to_message.from_user.id\n"
                       f"        bot.restrict_chat_member(chat_id, user_id, can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True)\n"
                       f"        bot.reply_to(message, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {{message.reply_to_message.from_user.username}} —Ä–∞–∑–º—É—á–µ–Ω.')\n    else:\n"
                       f"        bot.reply_to(message, '–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å.')\n\n")
        if spam_tf == True:
            file.write(f"bad_words = {spisok}\n"
                       f"def check_message(message):\n    for word in bad_words:\n        if word in message.text.lower():\n"
                       f"            return True\n    return False\n\n"
                       f"@bot.message_handler(func=lambda message: True)\ndef handle_message(message):\n"
                       f"    if check_message(message):\n        bot.kick_chat_member(message.chat.id, message.from_user.id)\n"
                       f"        bot.send_message(message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {{message.from_user.username}} –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —á–∞—Ç–∞ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤')\n"
                       f"    else:\n        print(message.text)\n\n")
        file.write('bot.infinity_polling(none_stop=True)')
        file.seek(0)
        bot.send_document(chat_id=chat_id, document=file)
    os.system(f'python {fuser_token}.py')
    kick_tf = False
    mute_tf = False
    spam_tf = False






bot.infinity_polling(none_stop=True)
